#!/bin/bash

#SBATCH --job-name=alphafold_prediction
#SBATCH --time=02:00:00          
#SBATCH --output=alphafold_%A_%a.out 
#SBATCH --error=alphafold_%A_%a.err
#SBATCH --partition gpu         
#SBATCH --gpus 1            # Request GPU resource
#SBATCH --ntasks 1                      
#SBATCH --cpus-per-task 4        
#SBATCH --array=0-100%50           # Array range and job limit

TMP_DIR="/scratch-shared/tmp.KJVsRs6W2S"

#Create output directory on scratch-shared filesystem before running script
TMP_OUTPUT="$TMP_DIR/ba2_100"

echo "Shared scratch space path: $TMP_DIR"

NODE_NAME=$(hostname)
echo "Node name: $NODE_NAME"

# Load modules
module load 2022
module load AlphaFold/2.3.1-foss-2022a-CUDA-11.7.0

data_root=/projects/2/managed_datasets/AlphaFold
project_root=./
fasta_dir=${project_root}/inputs/ba2_100

# Create an array of all fasta files
FILES=(${fasta_dir}/*.fasta)
echo $FILES

# Use SLURM_ARRAY_TASK_ID as index to get specific file for this job
FILE=${FILES[$SLURM_ARRAY_TASK_ID]}

echo $FILE

echo $SLURM_ARRAY_TASK_ID

# Extract the sequence name from the file path (removing directory path and .fasta extension)
SEQ_NAME=$(basename "$FILE" .fasta)

echo "Sequence name: $SEQ_NAME"

# Check if file exists to prevent errors in case of non-existent array index
if [ -f "$FILE" ]; then
    echo "Running AlphaFold on $FILE"
    cmd_args="--fasta_paths ${FILE}
    --output_dir ${TMP_OUTPUT}/${SEQ_NAME}
    --db_preset full_dbs 
    --data_dir ${data_root}
    --max_template_date 2023-03-20
    --use_precomputed_msas"

    alphafold ${cmd_args}
else
    echo "Skipping job for index $SLURM_ARRAY_TASK_ID, file for $SEQ_NAME does not exist."
fi
